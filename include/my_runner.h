/*
** EPITECH PROJECT, 2022
** my_runner
** File description:
** my_runner
*/

#ifndef MY_RUNNER_H_
    #define MY_RUNNER_H_
    #include <stdlib.h>
    #include <stdio.h>
    #include <unistd.h>
    #include <time.h>
    #include <sys/types.h>
    #include <sys/stat.h>
    #include <fcntl.h>
    #include <SFML/Graphics.h>
    #include <SFML/Window.h>
    #include <SFML/System/Vector2.h>
    #include <SFML/Graphics/Export.h>
    #include <SFML/Audio.h>
    typedef struct variable
    {
        sfRenderWindow *window;
        sfVideoMode video_mode;
        sfEvent event;
        sfTexture *background1_t;
        sfTexture *background2_t;
        sfTexture *background3_t;
        sfTexture *ground_t;
        sfTexture *man_walks;
        sfTexture *woman_walks;
        sfTexture *dwarf_walks;
        sfTexture *centipede_walks;
        sfTexture *turtle_walks;
        sfTexture *title_t;
        sfTexture *play_t;
        sfTexture *settings_t;
        sfTexture *icon_man_t;
        sfTexture *icon_woman_t;
        sfTexture *icon_dwarf_t;
        sfTexture *man_hurt;
        sfTexture *woman_hurt;
        sfTexture *dwarf_hurt;
        sfTexture *man_death;
        sfTexture *woman_death;
        sfTexture *dwarf_death;
        sfTexture *icon_boss_t;
        sfSprite *icon_boss_s;
        sfSprite *background1_s;
        sfSprite *background2_1_s;
        sfSprite *background2_2_s;
        sfSprite *background3_1_s;
        sfSprite *background3_2_s;
        sfSprite *ground_1_s;
        sfSprite *ground_2_s;
        sfSprite *player;
        sfSprite *ennemie1;
        sfSprite *ennemie2;
        sfSprite *title_s;
        sfSprite *play_s;
        sfSprite *settings_s;
        sfSprite *icon_man_s;
        sfSprite *icon_woman_s;
        sfSprite *icon_dwarf_s;
        sfVector2f scalex2;
        sfVector2f scalex1_4;
        sfVector2f back2_mov;
        sfVector2f back3_mov;
        sfVector2f back_pos;
        sfVector2f ground_pos;
        sfVector2f ground_mov;
        sfVector2f ground_pos1;
        sfVector2f scalex3;
        sfVector2f scalex0_4;
        sfVector2f pos_title;
        sfVector2f scalex0_25;
        sfVector2f pos_player;
        sfVector2f pos_ennemie;
        sfVector2f pos_play;
        sfVector2f move_right;
        sfVector2f move_left;
        sfVector2f move_up;
        sfVector2f move_down;
        sfVector2f pos_settings;
        sfVector2f move_centipede;
        sfVector2f move_turtle;
        sfVector2f scalex5;
        sfVector2f pos_icon_man;
        sfVector2f pos_icon_woman;
        sfVector2f pos_icon_dwarf;
        sfVector2f pos_text1;
        sfVector2f pos_text2;
        sfVector2f pos_text3;
        sfVector2f pos_text4;
        sfVector2f pos_text5;
        sfVector2f scalex1;
        sfVector2f scalex0_1;
        sfVector2f pos_icon_boss;
        sfVector2f scalex0_85;
        sfClock *clock;
        sfClock *clock_player;
        sfClock *clock_jump;
        sfClock *clock_down;
        sfClock *clock_intro;
        sfClock *clock_boss;
        sfClock *clock_map;
        sfIntRect rect_pla;
        sfIntRect rect_enne;
        sfIntRect rect_turtle;
        sfTime time;
        sfTime time_player;
        sfTime time_jump;
        sfTime time_down;
        sfTime time_intro;
        sfTime time_boss;
        sfTime time_map;
        sfColor color_sel;
        sfColor color_base;
        sfFont *font;
        sfText *text1;
        sfText *text2;
        sfText *text3;
        sfText *text4;
        sfText *text5;
        sfText *text6;
        sfText *text7;
        sfText *text8;
        sfText *text9;
        sfFloatRect player_box;
        sfFloatRect ennemi1_box;
        sfFloatRect ennemi2_box;
        sfMusic *music;
        sfMusic *jump_music;
        sfVector2u window_size;
        float seconds;
        float seconds_player;
        float seconds_jump;
        float seconds_down;
        float seconds_intro;
        float seconds_boss;
        float seconds_map;
        int anim;
        int race;
        int jump;
        int screen;
        int menu;
        int menu2;
        int level;
        int hurt;
        int life;
        int score;
        int ibm;
        int volume;
        int fd;
        int fd2;
        int map;
        int story;
        int int_better_score;
        int rand;
        char *selection_str;
        char *space_key_str;
        char *up_key_str;
        char *score_str;
        char *bad_str;
        char *settings_str;
        char *difficulty_str;
        char *normal_str;
        char *hard_str;
        char *infinity_str;
        char *escape_str;
        char *volume_str;
        char *screen_str;
        char *rules_str;
        char *less;
        char *more;
        char *int_volume_str;
        char *res1;
        char *res2;
        char *buffer;
        char *char_better_score;
        char *to_replay;
        char *go_menu;
        char *map_level_1;
        char *map_level_2;
        char *strong_str;
        char *victory_str;
        char *care_str;
        char *pause_str;
        char *map_level_3;
    }variable_t;
    void infinite_loop(variable_t var);
    variable_t analyse_event(variable_t var);
    variable_t normal_var(variable_t var);
    variable_t var_background(variable_t var);
    void draw_all(variable_t var);
    void explain(void);
    void my_putchar(char c);
    int my_putstr(char const *str);
    variable_t mov_back(variable_t var);
    variable_t var_player(variable_t var);
    variable_t anim_walk(variable_t var);
    variable_t var_ennemies(variable_t var);
    variable_t anim_centi(variable_t var);
    variable_t anim_turtle(variable_t var);
    variable_t event_player(variable_t var);
    variable_t intro(variable_t var);
    variable_t clock_intro_loop(variable_t var);
    variable_t clock_down_loop(variable_t var);
    variable_t var_menu(variable_t var);
    variable_t menu_screen0(variable_t var);
    variable_t event_menu(variable_t var);
    variable_t ennemies_management(variable_t var);
    variable_t var_portrait(variable_t var);
    variable_t var_text(variable_t var);
    variable_t event_menu_sel(variable_t var);
    variable_t menu_screen2(variable_t var);
    variable_t collision(variable_t var);
    variable_t anim_hurt(variable_t var);
    variable_t text_var_screen2(variable_t var);
    variable_t text_var_screen0(variable_t var);
    variable_t event_settings(variable_t var);
    variable_t death(variable_t var);
    variable_t make_text_score(variable_t var);
    variable_t boss_move(variable_t var);
    variable_t clock_boss_loop(variable_t var);
    variable_t var_music(variable_t var);
    void draw_screen5(variable_t var);
    variable_t text_var_screen5(variable_t var);
    void draw_screen4(variable_t var);
    variable_t text_var_screen4(variable_t var);
    variable_t menu_screen4(variable_t var);
    variable_t clock_jump_loop(variable_t var);
    variable_t text_var_screen5(variable_t var);
    variable_t menu_screen5(variable_t var);
    variable_t make_text_volume(variable_t var);
    variable_t event_menu2_screen5(variable_t var);
    variable_t event_screen(variable_t var);
    variable_t event_volume(variable_t var);
    variable_t make_better_score(variable_t var);
    variable_t better_score_death(variable_t var);
    variable_t event_death(variable_t var);
    variable_t text_var_screen3(variable_t var);
    variable_t clock_map_loop(variable_t var);
    variable_t make_map_normal(variable_t var);
    variable_t make_map_hard(variable_t var);
    variable_t do_map_1(variable_t var);
    variable_t do_map_2(variable_t var);
    variable_t clock_loop(variable_t var);
    variable_t clock_player_loop(variable_t var);
    variable_t clock_loop_add(variable_t var);
    variable_t var_text_3(variable_t var);
    void draw_screen6(variable_t var);
    variable_t text_var_screen6(variable_t var);
    variable_t event_victory(variable_t var);
    void draw_story(variable_t var);
    variable_t event_pause(variable_t var);
    variable_t draw_screen8(variable_t var);
    variable_t draw_all_next(variable_t var);
    void draw_screen0(variable_t var);
    void draw_screen1(variable_t var);
    void draw_screen2(variable_t var);
    void draw_screen3(variable_t var);
    variable_t make_infinity(variable_t var);
    variable_t next_map1(variable_t var);
    variable_t next_map2(variable_t var);
#endif
